name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run tests daily at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.7', '3.8', '3.9', '3.10', '3.11', '3.12']
        exclude:
          # Exclude some combinations to reduce CI time
          - os: windows-latest
            python-version: '3.7'
          - os: macos-latest
            python-version: '3.7'

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    # Install Chrome for Selenium tests
    - name: Install Chrome (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      uses: browser-actions/setup-chrome@latest
      
    - name: Install Chrome (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        choco install googlechrome -y
        
    - name: Install Chrome (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        brew install --cask google-chrome
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-test.txt
        pip install -e .
    
    - name: Lint with flake8
      run: |
        pip install flake8
        # Stop the build if there are Python syntax errors or undefined names
        flake8 bitchute --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings
        flake8 bitchute --count --exit-zero --max-complexity=10 --max-line-length=100 --statistics
    
    - name: Type check with mypy
      run: |
        pip install mypy types-requests types-python-dateutil pandas-stubs
        mypy bitchute --ignore-missing-imports
    
    - name: Test with pytest
      env:
        CI: true
      run: |
        pytest tests/ -v --cov=bitchute --cov-report=xml --cov-report=term-missing
    
    - name: Upload coverage to Codecov
      if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.9'
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  performance:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: 3.9
    
    - name: Install Chrome
      uses: browser-actions/setup-chrome@latest
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-test.txt
        pip install -e .
    
    - name: Run performance tests
      run: |
        pytest tests/ -m performance --tb=short -v
    
    - name: Generate performance report
      run: |
        python -c "
        import json
        from pathlib import Path
        
        # Create performance report
        report = {
            'timestamp': '${{ github.event.head_commit.timestamp }}',
            'commit': '${{ github.sha }}',
            'branch': '${{ github.ref_name }}',
            'status': 'completed'
        }
        
        Path('performance_report.json').write_text(json.dumps(report, indent=2))
        "
    
    - name: Upload performance report
      uses: actions/upload-artifact@v3
      with:
        name: performance-report
        path: performance_report.json

  integration:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: 3.9
    
    - name: Install Chrome
      uses: browser-actions/setup-chrome@latest
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-test.txt
        pip install -e .
    
    - name: Run integration tests
      env:
        CI: true
        INTEGRATION_TESTS: true
      run: |
        pytest tests/ -m integration -v

  security:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.9
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install safety bandit
    
    - name: Security check with safety
      run: |
        pip install -r requirements.txt
        safety check --json
    
    - name: Security check with bandit
      run: |
        bandit -r bitchute -f json -o bandit_report.json || true
    
    - name: Upload security reports
      uses: actions/upload-artifact@v3
      with:
        name: security-reports
        path: |
          bandit_report.json