[metadata]
name = bitchute-scraper
version = attr: bitchute.__version__
description = A modern, API-based package to scrape BitChute platform data with automatic download capabilities.
long_description = file: README.md
long_description_content_type = text/markdown
url = https://github.com/bumatic/bitchute-scraper
author = Marcus Burkhardt
author_email = marcus.burkhardt@gmail.com
maintainer = Marcus Burkhardt
maintainer_email = marcus.burkhardt@gmail.com
license = MIT
license_files = LICENSE
platform = any
classifiers =
    Development Status :: 5 - Production/Stable
    Intended Audience :: Developers
    Intended Audience :: Science/Research
    Intended Audience :: Information Technology
    License :: OSI Approved :: MIT License
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.7
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
    Programming Language :: Python :: 3.11
    Programming Language :: Python :: 3.12
    Programming Language :: Python :: 3 :: Only
    Operating System :: OS Independent
    Operating System :: POSIX :: Linux
    Operating System :: Microsoft :: Windows
    Operating System :: MacOS
    Topic :: Internet :: WWW/HTTP :: Dynamic Content
    Topic :: Scientific/Engineering :: Information Analysis
    Topic :: Software Development :: Libraries :: Python Modules
    Topic :: Multimedia :: Video
    Topic :: Internet :: File Transfer Protocol (FTP)
    Topic :: Database
    Topic :: Text Processing :: General
    Framework :: Jupyter
    Environment :: Console
    Environment :: Web Environment

[options]
zip_safe = False
packages = find:
python_requires = >=3.7
include_package_data = True
install_requires =
    requests>=2.28.0
    pandas>=1.5.0
    python-dateutil>=2.8.0
    retrying>=1.3.0
    selenium>=4.10.0
    webdriver-manager>=3.8.0
    urllib3>=1.26.0
    openpyxl>=3.0.0

[options.packages.find]
exclude =
    tests*
    docs*
    examples*

[options.extras_require]
full =
    tqdm>=4.64.0
    pyarrow>=10.0.0
    psutil>=5.8.0
    pyyaml>=6.0
progress = tqdm>=4.64.0
fast = pyarrow>=10.0.0
monitoring = psutil>=5.8.0
config = pyyaml>=6.0
dev =
    pytest>=7.0.0
    pytest-mock>=3.10.0
    pytest-cov>=4.0.0
    black>=22.0.0
    flake8>=5.0.0
    mypy>=1.0.0
    types-requests>=2.28.0
    types-python-dateutil>=2.8.0
docs =
    sphinx>=5.0.0
    sphinx-rtd-theme>=1.0.0
    myst-parser>=0.18.0
test =
    pytest>=7.0.0
    pytest-mock>=3.10.0
    pytest-cov>=4.0.0
lint =
    black>=22.0.0
    flake8>=5.0.0
    mypy>=1.0.0
    types-requests>=2.28.0
    types-python-dateutil>=2.8.0

[options.entry_points]
console_scripts =
    bitchute-scraper = bitchute.cli:main
    bitchute = bitchute.cli:main

[options.package_data]
bitchute = *.txt, *.md, *.json, *.yaml, *.yml

# ============================================================================
# FLAKE8 CONFIGURATION
# ============================================================================

[flake8]
max-line-length = 88
extend-ignore = E203, W503, E501, F401
exclude =
    .git,
    __pycache__,
    build,
    dist,
    *.egg-info,
    .venv,
    .tox,
    docs,
    migrations,
    .mypy_cache,
    .pytest_cache
per-file-ignores =
    __init__.py:F401
    */tests/*:S101
max-complexity = 10
docstring-convention = google
import-order-style = google

# ============================================================================
# MYPY CONFIGURATION
# ============================================================================

[mypy]
python_version = 3.7
warn_return_any = True
warn_unused_configs = True
disallow_untyped_defs = False
disallow_incomplete_defs = False
check_untyped_defs = True
disallow_untyped_decorators = False
no_implicit_optional = True
warn_redundant_casts = True
warn_unused_ignores = True
warn_no_return = True
warn_unreachable = True
strict_equality = True

[mypy-selenium.*]
ignore_missing_imports = True

[mypy-webdriver_manager.*]
ignore_missing_imports = True

[mypy-retrying.*]
ignore_missing_imports = True

[mypy-tqdm.*]
ignore_missing_imports = True

[mypy-pyarrow.*]
ignore_missing_imports = True

[mypy-psutil.*]
ignore_missing_imports = True

[mypy-yaml.*]
ignore_missing_imports = True

# ============================================================================
# COVERAGE CONFIGURATION
# ============================================================================

[coverage:run]
source = bitchute
branch = True
omit =
    */tests/*
    */test_*
    */__init__.py
    */setup.py
    */venv/*
    */.venv/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod
show_missing = True
precision = 2

[coverage:html]
directory = htmlcov

# ============================================================================
# TOOL CONFIGURATION
# ============================================================================

[tool:pytest]
minversion = 7.0
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --cov=bitchute
    --cov-report=term-missing
    --cov-report=html
    --cov-report=xml
testpaths = tests
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    unit: marks tests as unit tests
    api: marks tests that require API access
    download: marks tests that download files
filterwarnings =
    error
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning

[bandit]
exclude_dirs = tests,build,dist
skips = B101,B601

[doc8]
ignore-path = docs/_build,*.egg-info
max-line-length = 88